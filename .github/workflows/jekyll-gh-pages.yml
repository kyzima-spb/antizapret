# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Download image
        working-directory: ./www
        env:
          FTP_HOST: "${{ secrets.FTP_HOST }}"
          FTP_USER: ${{ secrets.FTP_USER }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        run: |
          wget -q \
               --ftp-user="$FTP_USER" \
               --ftp-password="$FTP_PASSWORD" \
               "${FTP_HOST}/SHA256SUMS" \
               "${FTP_HOST}/SHA256SUMS.gpg" \
               "${FTP_HOST}/rootfs.tar.xz" \
               "${FTP_HOST}/rootfs.tar.xz.manifest"
      - 
        name: Setup Pages
        uses: actions/configure-pages@v5
      - 
        name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./www
          destination: ./_site
      - 
        name: Upload artifact
        uses: actions/upload-pages-artifact@v3
      - 
        name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
